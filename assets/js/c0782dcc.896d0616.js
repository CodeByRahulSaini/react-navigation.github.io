"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[42581],{69026:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(85893),i=t(11151);const a={id:"drawer-actions",title:"DrawerActions reference",sidebar_label:"DrawerActions"},o=void 0,s={id:"drawer-actions",title:"DrawerActions reference",description:"DrawerActions is an object containing methods for generating actions specific to drawer-based navigators. Its methods expand upon the actions available in NavigationActions.",source:"@site/versioned_docs/version-3.x/drawer-actions.md",sourceDirName:".",slug:"/drawer-actions",permalink:"/docs/3.x/drawer-actions",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-3.x/drawer-actions.md",tags:[],version:"3.x",frontMatter:{id:"drawer-actions",title:"DrawerActions reference",sidebar_label:"DrawerActions"},sidebar:"version-3.x-docs",previous:{title:"SwitchActions",permalink:"/docs/3.x/switch-actions"},next:{title:"withNavigation",permalink:"/docs/3.x/with-navigation"}},c={},d=[{value:"Usage",id:"usage",level:3}];function l(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"DrawerActions"})," is an object containing methods for generating actions specific to drawer-based navigators. Its methods expand upon the actions available in ",(0,r.jsx)(n.a,{href:"/docs/3.x/navigation-actions",children:(0,r.jsx)(n.code,{children:"NavigationActions"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:"The following actions are supported:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#openDrawer",children:"openDrawer"})," - open the drawer"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#closeDrawer",children:"closeDrawer"})," - close the drawer"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#toggleDrawer",children:"toggleDrawer"})," - toggle the state, ie. switch from closed to open and vice versa"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { DrawerActions } from 'react-navigation-drawer';\n\nthis.props.navigation.dispatch(DrawerActions.toggleDrawer());\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>o});var r=t(67294);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);