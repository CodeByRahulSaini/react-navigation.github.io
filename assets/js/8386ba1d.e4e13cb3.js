"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[54931],{34206:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var r=t(85893),a=t(11151),i=t(74866),o=t(85162);const s={id:"group",title:"Group",sidebar_label:"Group"},c=void 0,l={id:"group",title:"Group",description:"A group contains several screens inside a navigator.",source:"@site/versioned_docs/version-7.x/group.md",sourceDirName:".",slug:"/group",permalink:"/docs/7.x/group",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-7.x/group.md",tags:[],version:"7.x",frontMatter:{id:"group",title:"Group",sidebar_label:"Group"},sidebar:"docs",previous:{title:"Navigator",permalink:"/docs/7.x/navigator"},next:{title:"Screen",permalink:"/docs/7.x/screen"}},u={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Screen options",id:"screen-options",level:3},{value:"Screen layout",id:"screen-layout",level:3},{value:"Navigation key",id:"navigation-key",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["A group contains several ",(0,r.jsx)(n.a,{href:"/docs/7.x/screen",children:"screens"})," inside a navigator."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"config",queryString:"config",children:[(0,r.jsxs)(o.Z,{value:"static",label:"Static",default:!0,children:[(0,r.jsxs)(n.p,{children:["Groups can be defined using the ",(0,r.jsx)(n.code,{children:"groups"})," property in the navigator configuration:"]}),(0,r.jsx)(n.pre,{"data-name":"Stack groups","data-snack":"true","data-version":"7",children:(0,r.jsx)(n.code,{className:"language-js",metastring:'name="Stack groups" snack version=7',children:"import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from '@react-navigation/elements';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {\n  createStaticNavigation,\n  useNavigation,\n} from '@react-navigation/native';\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Home Screen</Text>\n      <Button onPress={() => navigation.navigate('Search')}>\n        Go to Search\n      </Button>\n    </View>\n  );\n}\n\nfunction EmptyScreen() {\n  return <View />;\n}\n\n// codeblock-focus-start\nconst MyStack = createNativeStackNavigator({\n  groups: {\n    App: {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#FFB6C1',\n        },\n      },\n      screens: {\n        Home: HomeScreen,\n        Profile: EmptyScreen,\n      },\n    },\n    Modal: {\n      screenOptions: {\n        presentation: 'modal',\n      },\n      screens: {\n        Search: EmptyScreen,\n        Share: EmptyScreen,\n      },\n    },\n  },\n});\n// codeblock-focus-end\n\nconst Navigation = createStaticNavigation(Stack);\n\nexport default function App() {\n  return <Navigation />;\n}\n"})}),(0,r.jsxs)(n.p,{children:["The keys of the ",(0,r.jsx)(n.code,{children:"groups"})," object (e.g. ",(0,r.jsx)(n.code,{children:"Guest"}),", ",(0,r.jsx)(n.code,{children:"User"}),") are used as the ",(0,r.jsx)(n.a,{href:"#navigation-key",children:(0,r.jsx)(n.code,{children:"navigationKey"})})," for the group. You can use any string as the key."]})]}),(0,r.jsxs)(o.Z,{value:"dynamic",label:"Dynamic",children:[(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"Group"})," component is returned from a ",(0,r.jsx)(n.code,{children:"createXNavigator"})," function. After creating the navigator, it can be used as children of the ",(0,r.jsx)(n.code,{children:"Navigator"})," component:"]}),(0,r.jsx)(n.pre,{"data-name":"Stack groups","data-snack":"true","data-version":"7",children:(0,r.jsx)(n.code,{className:"language-js",metastring:'name="Stack groups" snack version=7',children:"import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from '@react-navigation/elements';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\n\nconst Stack = createNativeStackNavigator();\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Home Screen</Text>\n      <Button onPress={() => navigation.navigate('Search')}>\n        Go to Search\n      </Button>\n    </View>\n  );\n}\n\nfunction EmptyScreen() {\n  return <View />;\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      // codeblock-focus-start\n      <Stack.Navigator>\n        <Stack.Group\n          screenOptions={{ headerStyle: { backgroundColor: 'papayawhip' } }}\n        >\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Profile\" component={EmptyScreen} />\n        </Stack.Group>\n        <Stack.Group screenOptions={{ presentation: 'modal' }}>\n          <Stack.Screen name=\"Search\" component={EmptyScreen} />\n          <Stack.Screen name=\"Share\" component={EmptyScreen} />\n        </Stack.Group>\n      </Stack.Navigator>\n      // codeblock-focus-end\n    </NavigationContainer>\n  );\n}\n"})}),(0,r.jsxs)(n.p,{children:["It's also possible to nest ",(0,r.jsx)(n.code,{children:"Group"})," components inside other ",(0,r.jsx)(n.code,{children:"Group"})," components."]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"screen-options",children:"Screen options"}),"\n",(0,r.jsx)(n.p,{children:"Options to configure how the screens inside the group get presented in the navigator. It accepts either an object or a function returning an object:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"config",queryString:"config",children:[(0,r.jsx)(o.Z,{value:"static",label:"Static",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const MyStack = createNativeStackNavigator({\n  groups: {\n    Modal: {\n      // highlight-start\n      screenOptions: {\n        presentation: 'modal',\n      },\n      // highlight-end\n      screens: {\n        /* screens */\n      },\n    },\n  },\n});\n"})})}),(0,r.jsx)(o.Z,{value:"dynamic",label:"Dynamic",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<Stack.Group\n  // highlight-start\n  screenOptions={{\n    presentation: 'modal',\n  }}\n  // highlight-end\n>\n  {/* screens */}\n</Stack.Group>\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["When you pass a function, it'll receive the ",(0,r.jsx)(n.a,{href:"/docs/7.x/route-object",children:(0,r.jsx)(n.code,{children:"route"})})," and ",(0,r.jsx)(n.a,{href:"/docs/7.x/navigation-object",children:(0,r.jsx)(n.code,{children:"navigation"})}),":"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"config",queryString:"config",children:[(0,r.jsx)(o.Z,{value:"static",label:"Static",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const MyStack = createNativeStackNavigator({\n  groups: {\n    Modal: {\n      // highlight-start\n      screenOptions: ({ route, navigation }) => ({\n        title: route.params.title,\n      }),\n      // highlight-end\n      screens: {\n        /* screens */\n      },\n    },\n  },\n});\n"})})}),(0,r.jsx)(o.Z,{value:"dynamic",label:"Dynamic",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<Stack.Group\n  // highlight-start\n  screenOptions={({ route, navigation }) => ({\n    title: route.params.title,\n  })}\n  // highlight-end\n>\n  {/* screens */}\n</Stack.Group>\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["These options are merged with the ",(0,r.jsx)(n.code,{children:"options"})," specified in the individual screens, and the screen's options will take precedence over the group's options."]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/docs/7.x/screen-options",children:"Options for screens"})," for more details and examples."]}),"\n",(0,r.jsx)(n.h3,{id:"screen-layout",children:"Screen layout"}),"\n",(0,r.jsx)(n.p,{children:"A screen layout is a wrapper around each screen in the group. It makes it easier to provide things such as a common error boundary and suspense fallback for all screens in a group:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"config",queryString:"config",children:[(0,r.jsx)(o.Z,{value:"static",label:"Static",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const MyStack = createNativeStackNavigator({\n  groups: {\n    Modal: {\n      // highlight-start\n      screenLayout: ({ children }) => (\n        <ErrorBoundary>\n          <React.Suspense\n            fallback={\n              <View style={styles.fallback}>\n                <Text style={styles.text}>Loading\u2026</Text>\n              </View>\n            }\n          >\n            {children}\n          </React.Suspense>\n        </ErrorBoundary>\n      ),\n      // highlight-end\n      screens: {\n        /* screens */\n      },\n    },\n  },\n});\n"})})}),(0,r.jsx)(o.Z,{value:"dynamic",label:"Dynamic",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<Stack.Group\n  // highlight-start\n  screenLayout={({ children }) => (\n    <ErrorBoundary>\n      <React.Suspense\n        fallback={\n          <View style={styles.fallback}>\n            <Text style={styles.text}>Loading\u2026</Text>\n          </View>\n        }\n      >\n        {children}\n      </React.Suspense>\n    </ErrorBoundary>\n  )}\n  // highlight-end\n>\n  {/* screens */}\n</Stack.Group>\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"navigation-key",children:"Navigation key"}),"\n",(0,r.jsx)(n.p,{children:"Optional key for a group of screens. If the key changes, all existing screens in this group will be removed (if used in a stack navigator) or reset (if used in a tab or drawer navigator):"}),"\n",(0,r.jsxs)(i.Z,{groupId:"config",queryString:"config",children:[(0,r.jsxs)(o.Z,{value:"static",label:"Static",default:!0,children:[(0,r.jsxs)(n.p,{children:["The name of the group is used as the ",(0,r.jsx)(n.code,{children:"navigationKey"}),":"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const MyStack = createNativeStackNavigator({\n  groups: {\n    // highlight-next-line\n    User: {\n      screens: {\n        /* screens */\n      },\n    },\n    // highlight-next-line\n    Guest: {\n      screens: {\n        /* screens */\n      },\n    },\n  },\n});\n"})}),(0,r.jsxs)(n.p,{children:["This means if a screen is defined in 2 groups and the groups use the ",(0,r.jsx)(n.a,{href:"/docs/7.x/static-configuration#if",children:(0,r.jsx)(n.code,{children:"if"})})," property, the screen will remount if the condition changes resulting in one group being removed and the other group being used."]})]}),(0,r.jsx)(o.Z,{value:"dynamic",label:"Dynamic",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<Stack.Group\n  // highlight-next-line\n  navigationKey={isSignedIn ? 'user' : 'guest'}\n>\n  {/* screens */}\n</Stack.Group>\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["This is similar to the ",(0,r.jsx)(n.a,{href:"/docs/7.x/screen#navigation-key",children:(0,r.jsx)(n.code,{children:"navigationKey"})})," prop for screens, but applies to a group of screens."]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>o});t(67294);var r=t(86010);const a={tabItem:"tabItem_Ymn6"};var i=t(85893);function o(e){let{children:n,hidden:t,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.Z)(a.tabItem,o),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>y});var r=t(67294),a=t(86010),i=t(12466),o=t(16550),s=t(20469),c=t(91980),l=t(67392),u=t(50012);function d(e){var n,t;return null!=(n=null==(t=r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=null!=n?n:function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,l.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const a=(0,o.k6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,c._X)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,i=h(e),[o,c]=(0,r.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const a=null!=(n=r.find((e=>e.default)))?n:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[l,d]=g({queryString:t,groupId:a}),[v,m]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[a,i]=(0,u.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:a}),f=(()=>{const e=null!=l?l:v;return p({value:e,tabValues:i})?e:null})();(0,s.Z)((()=>{f&&c(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);c(e),d(e),m(e)}),[d,m,i]),tabValues:i}}var m=t(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(85893);function b(e){let{className:n,block:t,selectedValue:r,selectValue:o,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.o5)(),u=e=>{const n=e.currentTarget,t=c.indexOf(n),a=s[t].value;a!==r&&(l(n),o(a))},d=e=>{var n;let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var r;const n=c.indexOf(e.currentTarget)+1;t=null!=(r=c[n])?r:c[0];break}case"ArrowLeft":{var a;const n=c.indexOf(e.currentTarget)-1;t=null!=(a=c[n])?a:c[c.length-1];break}}null==(n=t)||n.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>c.push(e),onKeyDown:d,onClick:u,...i,className:(0,a.Z)("tabs__item",f.tabItem,null==i?void 0:i.className,{"tabs__item--active":r===n}),children:null!=t?t:n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:a}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function S(e){const n=v(e);return(0,x.jsxs)("div",{className:(0,a.Z)("tabs-container",f.tabList),children:[(0,x.jsx)(b,{...e,...n}),(0,x.jsx)(j,{...e,...n})]})}function y(e){const n=(0,m.Z)();return(0,x.jsx)(S,{...e,children:d(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>o});var r=t(67294);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);